# Generated by Django 5.0.7 on 2024-07-18 17:00

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Hack",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("body", models.TextField(blank=True, max_length=500, null=True)),
                ("upvote", models.IntegerField(blank=True, default=0, null=True)),
                ("downvote", models.IntegerField(blank=True, default=0, null=True)),
                ("vote_net", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "comment_count",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Writer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("twitter", models.CharField(blank=True, max_length=100, null=True)),
                ("telegram", models.CharField(blank=True, max_length=100, null=True)),
                ("username", models.CharField(blank=True, max_length=100, null=True)),
                ("instagram", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("body", models.TextField(blank=True, max_length=500, null=True)),
                ("upvote", models.IntegerField(blank=True, default=0, null=True)),
                ("downvote", models.IntegerField(blank=True, default=0, null=True)),
                ("vote_net", models.IntegerField(blank=True, default=0, null=True)),
                ("reply_count", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "hack",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="hacks.hack",
                    ),
                ),
                (
                    "writer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comment",
                        to="hacks.writer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reply",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("body", models.TextField(blank=True, max_length=500, null=True)),
                ("upvote", models.IntegerField(blank=True, default=0, null=True)),
                ("downvote", models.IntegerField(blank=True, default=0, null=True)),
                ("vote_net", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "comment",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="hacks.comment",
                    ),
                ),
                (
                    "writer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reply",
                        to="hacks.writer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "hack",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report",
                        to="hacks.hack",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="hack",
            name="writer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="hack",
                to="hacks.writer",
            ),
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        choices=[("up", "Upvote"), ("down", "Downvote")], max_length=200
                    ),
                ),
                (
                    "hack",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="hacks.hack"
                    ),
                ),
                (
                    "voter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vote",
                        to="hacks.writer",
                    ),
                ),
            ],
            options={
                "unique_together": {("hack", "voter")},
            },
        ),
        migrations.CreateModel(
            name="ReplyVote",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        choices=[("up", "Upvote"), ("down", "Downvote")], max_length=200
                    ),
                ),
                (
                    "reply",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="hacks.reply"
                    ),
                ),
                (
                    "voter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reply_vote",
                        to="hacks.writer",
                    ),
                ),
            ],
            options={
                "unique_together": {("reply", "voter")},
            },
        ),
        migrations.CreateModel(
            name="CommentVote",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        choices=[("up", "Upvote"), ("down", "Downvote")], max_length=200
                    ),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="hacks.comment"
                    ),
                ),
                (
                    "voter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comment_vote",
                        to="hacks.writer",
                    ),
                ),
            ],
            options={
                "unique_together": {("comment", "voter")},
            },
        ),
    ]
